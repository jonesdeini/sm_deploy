#!/bin/sh

trace_filter "deploy" || set -o xtrace

typeset -gx shared_path project_path stage_path release_path discard_path \
  versions_path log_file timestamp

typeset -g previous_releases previous deploy_timestamp deploy_log_path \
  _hooks_flag environment result

typeset -ga deploy_steps old_releases

if ! command exists rsync
then
  log error "rsync is required in order to use the deploy extension, "\
  "please install rsync before continuing\n"\
  "  sm rsync package install"
fi

if variable is empty "repository_url"
then
  log error "The project's repository_url must be set in configuration files (eg: ~/.smrc)"
fi

deploy_timestamp="$(date +"%Y-%m-%dT%H%M%S")"
timestamp="${deploy_timestamp}" # This one is exported.

versionedfs create \
  path "${project_path}" \
  strategy name \
  method copy \
  activate first

true \
  ${environment:="development"} \
  ${discard_path:="${project_path}/discard"} \
  ${stage_path:="${project_path}/stage"} \
  ${release_path:="${project_path}/active/${project}"} \
  ${versions_path:="${project_path}/versions/${project}"} \
  ${deploy_log_path:="${shared_path}/log/deploy/${deploy_timestamp}"} \
  ${_hooks_flag:=1}

paths create "$deploy_log_path"

previous_releases=$( versionedfs versions path "${project_path}" name "${project}" )

array first "previous_releases" as "previous"

if (( $(array length previous_releases) > ${keep_releases:-3} ))
then
  old_releases=($(
  echo ${previous_releases} | sort -r | awk "NR > ${keep_releases:-3}"
  ))
fi

deploy_steps=(
  update_repository
  stage
  configure
  release
  record
  cleanup
)

